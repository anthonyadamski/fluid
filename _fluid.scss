$fluid-settings: () !default;

$fluid-settings: map-merge(
	(
		minViewportWidth: 320,
		minFontSize: 21,
		minTypeScale: minorThird,
		maxViewportWidth: 1140,
		maxFontSize: 24,
		maxTypeScale: majorThird,
		singleStep: null,
		negativeSteps: 2,
		positiveSteps: 4,
	),
	$fluid-settings
);

$fluid-type-scales: (
	minorSecond: 1.067,
	majorSecond: 1.125,
	minorThird: 1.2,
	majorThird: 1.25,
	perfectFourth: 1.333,
	augmentedFourth: 1.414,
	perfectFifth: 1.5,
	minorSixth: 1.6,
	goldenRatio: 1.618,
	majorSixth: 1.667,
	minorSeventh: 1.778,
	majorSeventh: 1.875,
	octave: 2,
	majorTenth: 2.5,
	majorEleventh: 2.667,
	majorTwelfth: 3,
	doubleOctave: 4
);

@mixin fluid-class-constructor($params) {
	$minFontSize: map-get($params, minFontSize);
	$minViewportWidth: map-get($params, minViewportWidth);
	$minTypeScale: map-get($params, minTypeScale);
	$maxFontSize: map-get($params, maxFontSize);
	$maxViewportWidth: map-get($params, maxViewportWidth);
	$maxTypeScale: map-get($params, maxTypeScale);
	$multiplier: map-get($params, multiplier);

	$lookupMinScale: map-get($fluid-type-scales, $minTypeScale);
	$lookupMaxScale: map-get($fluid-type-scales, $maxTypeScale);
	$minTypeScale: if($lookupMinScale != null, $lookupMinScale, $minTypeScale);
	$maxTypeScale: if($lookupMaxScale != null, $lookupMaxScale, $maxTypeScale);
	
	$minFontSize: $minFontSize / 16 * math-exponent($minTypeScale, $multiplier);
	$maxFontSize: $maxFontSize / 16 * math-exponent($maxTypeScale, $multiplier);

	$maxViewportWidth: $maxViewportWidth / 16;
	$minViewportWidth: $minViewportWidth / 16;

	$slope: ($maxFontSize - $minFontSize) / ($maxViewportWidth - $minViewportWidth);
	$yAxisIntersection: -$minViewportWidth * $slope + $minFontSize;
	$preferredValue: calc(#{$yAxisIntersection * 1rem} + #{$slope * 100vw});

	$minFontSize: $minFontSize * 1rem;
	$maxFontSize: $maxFontSize * 1rem;

	font-size: clamp(#{$minFontSize}, #{$preferredValue}, #{$maxFontSize});
}

@mixin fluid-generate-classes($params) {
	$negativeSteps: map-get($params, negativeSteps);
	$positiveSteps: map-get($params, positiveSteps);
	@if ($negativeSteps) {
		@for $i from ($negativeSteps * -1) to 0 {
			.ft-#{$i} {
				@include fluid-class-constructor(
					map-merge($params, (multiplier: $i))
				);
			}
		}
	} @else {
		@error 'negativeSteps param is null.';
	}
	@if ($positiveSteps) {
		@for $i from 0 through ($positiveSteps + 1) {
			.ft-#{$i} {
				@include fluid-class-constructor(
					map-merge($params, (multiplier: $i))
				);
			}
		}
	} @else {
		@error 'postiveSteps is null.';
	}
}
